{"version":3,"sources":["components/App.js","components/Credit.js","serviceWorker.js","index.js"],"names":["Button","styled","AwesomeButton","_templateObject","props","twocell","threecell","LCD","div","_templateObject2","Output","_templateObject3","blinkAnimation","keyframes","_templateObject4","Blinker","span","_templateObject5","Screen","e","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","this","lastFormula","results","Component","App","state","formula","areWePuttingDot","dotIterate","wasOperatorLast","handleFormula","currentInput","_this","LastInput","length","isCurrentInputNumber","isNumber","isLastInputNumber","isLastInputsNumbers","isLastInputsOperators","isDifferentInputs","newNumber","Math","pow","console","log","pop","push","setState","concat","parseInt","handleClear","handleCalculation","isLastInputOperator","isNaN","eval","join","parseFloat","toFixed","handleDot","Number","_this2","type","size","id","onPress","_Credit__WEBPACK_IMPORTED_MODULE_10__","Link","StyledCredit","h3","Credit","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","icon","faHeart","pulse","style","color","opacity","href","target","float","faGithub","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a65fd053.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/themes/theme-indigo.css\";\nimport Credit from './Credit';\nimport \"./App.scss\";\nimport { isNumber } from \"util\";\n\nconst Button = styled(AwesomeButton)`\n  --button-default-border-radius: 6px;\n  --button-horizontal-padding: 20px;\n  /* --button-anchor-color-light: #ffffff;\n  --button-anchor-color: #293b83;\n  --button-anchor-color-dark: #ee3253;\n  --button-secondary-color-dark: #edce31;\n  --button-primary-color-dark: #edce31; */\n  --button-raise-level: 3px;\n  --button-hover-pressure: 2;\n  --transform-speed: 0.185s;\n  --button-primary-color-light: white;\n  flex-basis: ${props => (props.twocell ? \"50%!important\" : \"\")};\n  flex-basis: ${props => (props.threecell ? \"75%\" : \"23%\")};\n  font-size: ${props => (props.threecell ? \"2rem\" : \"3rem\")};\n  @media screen and (max-width: 365px) {\n    font-size: 2rem;\n  }\n`;\nconst LCD = styled.div`\n  width: 100%;\n  position: relative;\n  text-align: right;\n  height: 19px;\n  /* color: rgba(255, 255, 255, 0.4); */\n  color: rgba(232, 234, 246, 0.5);\n  font-size: 1rem;\n  letter-spacing: 5px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\nconst Output = styled.div`\n  width: 100%;\n  text-align: right;\n  color: white;\n  font-size: 3rem;\n  letter-spacing: 2px;\n  font-weight: 700;\n`;\n\nconst blinkAnimation = keyframes`\n  from { opacity: 1.0; }\n  to { opacity: 0.0; }\n`;\n\nconst Blinker = styled.span`\n  animation: ${blinkAnimation} 1s cubic-bezier(1, 0, 0, 1) infinite;\n  //Basic styling\n  display: inline-block;\n  position: absolute;\n  right: 0;\n  width: 1px;\n  height: 19px;\n  margin-left: 10px;\n  box-shadow: 0 0 10px rgba(white, 0.3);\n  background: white;\n  transition: all 0.3s ease;\n`;\n\nclass Screen extends Component {\n  render(e) {\n    return (\n      <div className=\"row screen\">\n        <LCD>\n          <span>{this.props.lastFormula}</span>\n\n          <Blinker />\n        </LCD>\n\n        <Output>{this.props.results}</Output>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  state = {\n    formula: [],\n    results: \"\",\n    lastFormula: [],\n    areWePuttingDot: false,\n    dotIterate: 0,\n    wasOperatorLast: false\n  };\n  handleFormula = (e, currentInput) => {\n    const formula = this.state.formula;\n    const LastInput = formula[formula.length - 1];\n    const wasOperatorLast = this.state.wasOperatorLast;\n    const isCurrentInputNumber = isNumber(currentInput);\n    const isLastInputNumber = isNumber(LastInput) && !wasOperatorLast;\n\n    const isLastInputsNumbers = isCurrentInputNumber && isLastInputNumber;\n    const isLastInputsOperators = !isCurrentInputNumber && !isLastInputNumber;\n\n    const isDifferentInputs =\n      (isCurrentInputNumber && !isLastInputNumber) ||\n      (!isCurrentInputNumber && isLastInputNumber);\n\n    if (isLastInputsNumbers && this.state.areWePuttingDot && !wasOperatorLast) {\n      // Last inputs are Numbers and we're putting dots\n      const dotIterate = this.state.dotIterate + 1;\n      const lastFormula = this.state.lastFormula;\n      const newNumber = LastInput + currentInput / Math.pow(10, dotIterate);\n      console.log(newNumber);\n      formula.pop();\n      formula.push(newNumber);\n      lastFormula.pop();\n      lastFormula.push(newNumber);\n      this.setState({ formula, lastFormula, dotIterate });\n      return;\n    }\n\n    if (isCurrentInputNumber) {\n      this.setState({ wasOperatorLast: false });\n    } else {\n      this.setState({ wasOperatorLast: true });\n    }\n\n    if (isLastInputsNumbers) {\n      // Last inputs are Numbers and we're stacking numbers\n\n      // formula\n      const newNumber = `${LastInput}${currentInput}`;\n      formula.pop();\n      formula.push(parseInt(newNumber));\n\n      // lastFormula\n\n      const lastFormula = this.state.lastFormula;\n      lastFormula.push(currentInput);\n\n      // setState\n      this.setState({ formula, lastFormula });\n      return;\n    }\n\n    if (isLastInputsOperators) {\n      // Last inputs are Operators, just abort.\n      this.setState({ areWePuttingDot: false });\n      return;\n    }\n\n    if (isDifferentInputs) {\n      // Last inputs are different and we're changing the formula!\n      const formula = this.state.formula;\n      const lastFormula = this.state.lastFormula;\n      formula.push(currentInput);\n      lastFormula.push(currentInput);\n      this.setState({\n        formula,\n        lastFormula,\n        areWePuttingDot: false,\n        dotIterate: 0\n      });\n      // if (!isLastInputsNumbers) {\n      //   this.handleCalculation();\n      // }\n      return;\n    }\n  };\n  handleClear = () => {\n    const formula = [];\n    const lastFormula = [];\n    const results = 0;\n    this.setState({ formula, results, lastFormula });\n  };\n  handleCalculation = () => {\n    const formula = this.state.formula;\n    const isLastInputOperator = isNaN(formula[formula.length - 1]);\n    if (!isLastInputOperator) {\n      let results = eval(this.state.formula.join(\" \"));\n      results = parseFloat(results.toFixed(2));\n      this.setState({\n        results,\n        formula: [results],\n        lastFormula: formula,\n        areWePuttingDot: false\n      });\n    }\n  };\n  handleDot = () => {\n    if (this.state.wasOperatorLast) {\n      console.log(\"wasOperatorLast!\");\n      return;\n    }\n    const lastFormula = this.state.lastFormula;\n    let LastInput = lastFormula[lastFormula.length - 1];\n    LastInput = LastInput.toFixed(2);\n    console.log(Number(LastInput));\n    lastFormula.pop();\n    lastFormula.push(LastInput);\n    this.setState({ areWePuttingDot: true, lastFormula });\n  };\n  render(e) {\n    return (\n      <div className=\"container\">\n        <div className=\"bar\" />\n        <Screen\n          lastFormula={this.state.lastFormula}\n          results={this.state.results}\n        />\n        <div className=\"calculator\">\n          <div className=\"row\">\n            <Button\n              type=\"link\"\n              size=\"small\"\n              threecell\n              id=\"clear\"\n              onPress={this.handleClear}\n            >\n              AC\n            </Button>\n            <Button\n              type=\"secondary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, \"/\")}\n            >\n              ÷\n            </Button>\n          </div>\n          <div className=\"row\">\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 7)}\n            >\n              7\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 8)}\n            >\n              8\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 9)}\n            >\n              9\n            </Button>\n            <Button\n              type=\"secondary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, \"*\")}\n            >\n              ×\n            </Button>\n          </div>\n\n          <div className=\"row\">\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 4)}\n            >\n              4\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 5)}\n            >\n              5\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 6)}\n            >\n              6\n            </Button>\n            <Button\n              type=\"secondary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, \"-\")}\n            >\n              -\n            </Button>\n          </div>\n\n          <div className=\"row\">\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 1)}\n            >\n              1\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 2)}\n            >\n              2\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 3)}\n            >\n              3\n            </Button>\n            <Button\n              type=\"secondary\"\n              size=\"small\"\n              className=\"fix\"\n              onPress={e => this.handleFormula(e, \"+\")}\n            >\n              +\n            </Button>\n          </div>\n\n          <div className=\"row\">\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onPress={e => this.handleFormula(e, 0)}\n            >\n              0\n            </Button>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              className=\"fix\"\n              onPress={this.handleDot}\n            >\n              .\n            </Button>\n            <Button\n              type=\"secondary\"\n              size=\"small\"\n              twocell\n              className=\"fix\"\n              onPress={this.handleCalculation}\n            >\n              =\n            </Button>\n          </div>\n        </div>\n        <Credit/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Link = styled.a`\n  color: inherit;\n  text-decoration: none;#61dafb\n`;\n\nconst StyledCredit = styled.h3`\n  position: absolute;\n  bottom: -50px;\n  left: 0;\n  color: rgba(255, 255, 255, 0.5);\n  font-family: \"Karla\", sans-serif;\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.08rem;\n  font-size: 0.8rem;\n  width: 100%;\n  & > *:not(:last-child) {\n    float: left;\n    vertical-align: middle;\n  }\n`;\n\nclass Credit extends Component {\n  render() {\n    return (\n      <StyledCredit>\n        <span>\n          Made with{\" \"}\n          <FontAwesomeIcon\n            icon={faHeart}\n            pulse\n            style={{ color: \"#f44336\", opacity: \"1\" }}\n          />{\" \"}\n          by{\" \"}\n          <Link\n            href=\"http://imsolitude.github.io\"\n            style={{ color: \"rgba(255, 255, 255, 1)\" }}\n            target=\"_blank\"\n          >\n            muhammadj\n          </Link>\n          <Link\n            href=\"https://github.com/ImSolitude/JSCalculator\"\n            target=\"_blank\"\n            style={{ opacity: \"1\", float: \"right\" }}\n          >\n            <FontAwesomeIcon\n              icon={faGithub}\n              size=\"2x\"\n              style={{ color: \"white\" }}\n            />\n          </Link>\n        </span>\n      </StyledCredit>\n    );\n  }\n}\n\nexport default Credit;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import AppRouter from './components/Router';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n<App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}